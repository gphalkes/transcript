# Copyright (C) 2011 G.P. Halkes
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3, as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

EXTENSIONS="c libtool cxx pkgconfig"
MAKEFILES="Makefile Makefile.libtranscript Makefile.linkltc Makefile.ucm2ltc"

SWITCHES="+gettext -ucm2ltc -verbose-compile"
OPTIONS="localedir"

SUFFIXES="${SUFFIXES} .mo .po"
DEFAULT_LINGUAS="nl"
LTSHARED=1

USERRULES=print_rules
USERHELP=print_help
PRECHECKFUNC=precheck
SEDEXTRA=sed_extra

print_help() {
	cat <<EOF
  --without-gettext  Disable gettext translations
  --with-ucm2ltc     Build converter specification compiler (ucm2ltc)
                           Requires a working C++ compiler
  --localedir=<dir>  Installation directory for locales [prefix/share/locale]
  --with-verbose-compile   Echo all commands during compile
EOF
}

print_rules() {
	cat <<EOF
.po.mo:
	msgfmt -o \$@ \$<

EOF
}

precheck() {
	if [ "no" = "${with_ucm2ltc}" ] ; then
		EXTENSIONS="c libtool pkgconfig"
	fi
}

checkfunction() {
	clean .config.o

	CHECKFOR="$1"
	CODE="$2"
	shift 2
	{
		for INCLUDE
		do
			echo "#include ${INCLUDE}"
		done
		cat <<EOF
int main(int argc, char *argv[]) {
	${CODE}
	return 0;
}
EOF
	} > .config.c

	clean .config.o
	test_link "${CHECKFOR}"
}

config() {
	unset CONFIGFLAGS
	# Test for all required functionality

	cat > .config.c <<EOF
#include <sys/types.h>
#include <dirent.h>

int main(int argc, char *argv[]) {
	DIR *dir;
	struct dirent *entry;

	dir = opendir(".");
	entry = readdir(dir);
	puts(entry->d_name[0]);
	closedir(dir);
	return 0;
}
EOF

	clean .config.o
	test_link "opendir/readdir/closedir" || error "!! A required function is not available (see config.log for details)."

	cat > .config.c <<EOF
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>

int main(int argc, char *argv[]) {
	struct stat statbuf;
	symlink("old", "new");
	unlink("name");
	lstat("name", &statbuf);
	S_ISLNK(statbuf.st_mode);
	return 0;
}
EOF

	clean .config.o
	test_link "symlink/unlink/lstat" || error "!! A required function is not available (see config.log for details)."

	cat > .config.c <<EOF
#include <ltdl.h>

int main(int argc, char *argv[]) {
	lt_dlhandle handle;
	handle = lt_dlopen("name");
	lt_dlerror();
	lt_dlsym(handle, "sym_name");
	lt_dlclose(handle);
	lt_dlinit();
	lt_dlexit();
	return 0;
}
EOF

	clean .config.o
	test_link "libltdl" "TESTLIBS=-lltdl" || error "!! Please install libltdl and its development files"

	HAS_SETLOCALE=unknown
	if checkfunction "nl_langinfo" "nl_langinfo(CODESET);" "<langinfo.h>" ; then
		CONFIGFLAGS="${CONFIGFLAGS} -DHAS_NL_LANGINFO"
	elif checkfunction "setlocale" "setlocale(LC_CTYPE, NULL);" "<locale.h>" ; then
		HAS_SETLOCALE=yes
	else
		error "!! A required function is not available."
	fi

	checkfunction "strdup" "strdup(\"foo\");" "<string.h>" && CONFIGFLAGS="${CONFIGFLAGS} -DHAS_STRDUP"

	if checkfunction "htole32 in <sys/endian.h>" "htole32(20);" "<sys/endian.h>" ; then
		CONFIGFLAGS="${CONFIGFLAGS} -DUSE_SYS_ENDIAN"
	elif checkfunction "htole32 in <endian.h>" "htole32(20);" "<endian.h>" ; then
		CONFIGFLAGS="${CONFIGFLAGS} -DUSE_ENDIAN"
	fi

	cat > .config.c <<EOF
static inline int foo() { return 4; }
int main(int argc, char *argv[]) {
	return foo;
}
EOF
	test_compile "inline keyword" && CONFIGFLAGS="${CONFIGFLAGS} -DHAS_INLINE"

	unset GETTEXTFLAGS GETTEXTLIBS linguas LOCALEDIR
	# Check for gettext functionality
	if [ "yes" = "${with_gettext}" ] ; then
		[ "${HAS_SETLOCALE}" = "yes" ] || checkfunction "setlocale" "setlocale(LC_ALL, \"\");" "<locale.h>" || \
			error "!! Gettext support unavailable. Try configuring with --without-gettext"

#FIXME: need to change to check for functions specifically used in library
		cat > .config.c <<EOF
#include <locale.h>
#include <libintl.h>

int main(int argc, char *argv[]) {
	bindtextdomain("libtranscript", "/usr/share/locale");
	dgettext("libtranscript", "string");
	return 0;
}
EOF
		{
			test_compile "gettext and related functions" && {
				test_link "gettext in standard library" ||
				{ test_link "gettext in -lintl" TESTLIBS=-lintl && GETTEXTLIBS=-lintl ; } ||
				{ test_link "gettext in -lintl -liconv" "TESTLIBS=-lintl -liconv" && GETTEXTLIBS="-lintl -liconv" ; }
			} && {
				GETTEXTFLAGS="-DUSE_GETTEXT"

				clean .config.po .config.mo
				cat > .config.po <<EOF
msgid  "msg"
msgstr "translation"
EOF
				check_message "Checking for msgfmt... "
				if test_make .config.mo >> config.log 2>&1 ; then
					check_message_result "yes"
					true
				else
					check_message_result "no"
					false
				fi
			}
		} || {
			clean .config.po .config.mo
			error "!! Could not compile with gettext. Try configuring with --without-gettext."
		}
		GETTEXTFLAGS="-DUSE_GETTEXT"
		clean .config.po .config.mo

		unset linguas
		if [ -n "${LINGUAS+set}" ] ; then
			check_message "Checking for available selected translations... "
			for lingua in ${LINGUAS}
			do
				if [ -f "po/${lingua}.po" ] && echo "${linguas}" | not grep "^\\(.* \\)*${lingua}\\( .*\\)*$" > /dev/null ; then
					linguas="${linguas}${linguas:+ }${lingua}"
				fi
			done
			check_message_result "done [${linguas}]"
		else
			linguas="${DEFAULT_LINGUAS}"
		fi
	fi

	if [ yes = "${with_ucm2ltc}" ] ; then
		cat > .config.c <<EOF
#include <unistd.h>
#include <stdio.h>

int main(int argc, char *argv[]) {
	return isatty(fileno(stdin));
}
EOF
		clean .config.o
		test_link "isatty/fileno" || error "!! Function required for ucm2ltc not found. Try configuring without --with-ucm2ltc."
		cat > .configcxx.cc <<EOF
#include <stdio.h>

int main(int argc, char *argv[]) {
	char test[10];
	snprintf(test, sizeof(test), "foo");
}
EOF
		clean .configcxx.o
		test_link_cxx "snprintf" || error "!! Function required for ucm2ltc not found. Try configuring without --with-ucm2ltc."
	else
		MAKEFILES="Makefile Makefile.libtranscript Makefile.linkltc"
		cat > Makefile.ucm2ltc <<EOF
all:
clean:
dist-clean:
EOF
	fi

	create_makefile "CONFIGFLAGS=${CONFIGFLAGS}" "GETTEXTFLAGS=${GETTEXTFLAGS}" "GETTEXTLIBS=${GETTEXTLIBS}" \
	"LINGUAS=${linguas}" ${option_localedir:+"LOCALEDIR=${option_localedir}"}
}

sed_extra() {
	#~ if [ yes = "${with_ucm2ltc}" ] ; then
	echo "/^pkgconfigdir=/c\\
pkgconfigdir=${pkgconfigdir}"
	[ yes = "${with_verbose_compile}" ] && echo '/^SILEN\(CE\|T\)/d'
}
