HIGH PRIORITY
=============
- proper testing of all the convertors!!! This means both correct and
  incorrect input!
- aliases.txt should be updated to reflect the state of affairs according to
  me.
- provide a Makefile for the ibm ucm files, which bunches similar convertors
  into a single cct
- provide pkg-config stuf for our own library
- read all aliases.txt files in all dirs, and provide a name for allowing
  system wide overrides (/etc/transcript/aliases.txt?)
- a convertor with options may never be a display name. The options have some
  interesting interactions with other parts of the code.
  - looking op the real convertor
  - comparing equality of convertors
  this needs to be checked and maybe some rules need to be defined
- the new library stuf has made the save state size determination more difficult
  Perhaps a new state_destroy method should be provide, such that if needed
  the state can be allocated on the heap.


MEDIUM PRIORITY
===============
- add an interface to get the fallback character for a specific sequence
  encountered in the input. This interface can have one of two forms:
  - a flag which indicates that if a fallback is encoutered, it should be
    appended to the current output, but with the output ptr at the normal
	position (so it is added after the normal output)
  - a function to retrieve the character. The latter is obviously the most
    clean interface (least hacky), but is less efficient, and likely duplicates
	some code.
  In both cases, we actually have to convert the bytes we find to a unicode
  character. To do this, we have to
  - figure out which starting state the target bytes use
  - save the current convertor state.to
  - set the convertor state.to to the required one for converting the target
  - convert the target to unicode
  - restore the convertor state.to
  - return the found unicode state
  However, we can also simply provide a short list in each convertor indicating
  which fallbacks there are. Then we can do a binary search on that and return
  that value. Those are the overrides only, because for the general ones we
  don't include anything.
- iso-2022-*, lmb, scsu, [bocu-1 PATENTED], iscii
- the aliases file is in ASCII, but the system on which we are running may not
  be! This means the aliases file should be converted to the current execution
  charset before use.
- should options be normalized as well, or should normalization stop as soon as
  we see a comma?

LOW PRIORITY
============
- perhaps an iconv like A to B convertor with better semantics and better
  performance (through multiple conversions at a time) should be provided as
  well
- should TRANSCRIPT_ALLOW_PRIVATE_USE impact the from_unicode conversion as well?

IDEAS/MISC
==========
- See http://x0213.org/codetable/index.en.html
  official standard (in japanese) http://www.jisc.go.jp/app/pager?id=72545

RELEASE ENGINEERING
===================
- testing for
	- HAS_INLINE
	- HAS_NL_LANGINFO
	- HAS_STRDUP
	- USE_ENDIAN
	- USE_GETTEXT (don't forget to set LOCALEDIR! see dwdiff Makefile.dist.in)
- provide translations
- set the copyright years correctly
