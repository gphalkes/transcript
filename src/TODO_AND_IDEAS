HIGH PRIORITY
=============
- proper testing of all the convertors!!! This means both correct and
  incorrect input!
- aliases.txt should be updated to reflect the state of affairs according to
  me.
- provide a Makefile for the ibm ucm files, which bunches similar convertors
  into a single cct
- use pthread-stubs compile in dist Makefile [glibc provides the required
  stubs, but should compile with `pkg-config --cflags pthread-stubs`]
- provide pkg-config stuf for our own library
- the now "built-in" convertors should be made modules as well, and the open
  interface needs to pass a pointer to the internal generic open function to
  allow loading of tables.
- the Unicode convertor needs to check whether the requested conversion is
  actually a Unicode conversion with invalid flags.
- need to add a TRANSCRIPT_INVALID_FLAG error, for which we should check in all
  convertors
- add probe=load flag for convertors to indicate that to probe if the convertor
  is available, it should be loaded and checked that way.
- searching for plugins should be done "by hand", because the client program
  may be using libltdl itself and may change the search path
- move convertor loading functions to a separate file
- read all aliases.txt files in all dirs, and provide a name for allowing
  system wide overrides (/etc/transcript/aliases.txt?)
- provide a block flag to disallow certain convertors
- flag handling should be done differently, because now certain flags will be
  handled by the library. Perhaps passing the flags separately would be a good
  idea.
- the new library stuf has made the save state size determination more difficult
  Perhaps a new state_destroy method should be provide, such that if needed
  the state can be allocated on the heap.
- need to fix (as in fixate) the extension, such that for probing we can suffice
  with opening the name. Otherwise, we need to know the extension for dynamic
  objects on each platform.
- should options be normalized as well, or should normalization stop as soon as
  we see a comma?

MEDIUM PRIORITY
===============
- add an interface to get the fallback character for a specific sequence
  encountered in the input. This interface can have one of two forms:
  - a flag which indicates that if a fallback is encoutered, it should be
    appended to the current output, but with the output ptr at the normal
	position (so it is added after the normal output)
  - a function to retrieve the character. The latter is obviously the most
    clean interface (least hacky), but is less efficient, and likely duplicates
	some code.
  In both cases, we actually have to convert the bytes we find to a unicode
  character. To do this, we have to
  - figure out which starting state the target bytes use
  - save the current convertor state.to
  - set the convertor state.to to the required one for converting the target
  - convert the target to unicode
  - restore the convertor state.to
  - return the found unicode state
  However, we can also simply provide a short list in each convertor indicating
  which fallbacks there are. Then we can do a binary search on that and return
  that value. Those are the overrides only, because for the general ones we
  don't include anything.
- iso-2022-*, lmb, scsu, [bocu-1 PATENTED]
- the aliases file is in ASCII, but the system on which we are running may not
  be! This means the aliases file should be converted to the current execution
  charset before use.

LOW PRIORITY
============
- perhaps an iconv like A to B convertor with better semantics and better
  performance (through multiple conversions at a time) should be provided as
  well
- should TRANSCRIPT_ALLOW_PRIVATE_USE impact the from_unicode conversion as well?

IDEAS/MISC
==========
- See http://x0213.org/codetable/index.en.html
  official standard (in japanese) http://www.jisc.go.jp/app/pager?id=72545

RELEASE ENGINEERING
===================
- testing for
	- HAS_INLINE
	- HAS_NL_LANGINFO
	- HAS_STRDUP
	- USE_ENDIAN
	- USE_GETTEXT (don't forget to set LOCALEDIR! see dwdiff Makefile.dist.in)
- provide translations
- set the copyright years correctly
