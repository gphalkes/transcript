HIGH PRIORITY
=============
- proper testing of all the converters!!! This means both correct and
  incorrect input!
- aliases.txt should be updated to reflect the state of affairs according to
  me.

- report bug in glibc iconv: U0080-U009F are encoded as 1B 2E 41 1B 4E [00 - 1F]
  which is wrong. The 1B 2E 41 shifts in the ISO-8859-1 set into G2, but G2 only
  includes the 96 graphics characters, and not the C1 set! The C1 set should be
  encoded as 1B [40 - 5F] (DONE!)
- report above bug to GNU libiconv as well

MEDIUM PRIORITY
===============
- add an interface to get the fallback character for a specific sequence
  encountered in the input. This interface can have one of two forms:
  - a flag which indicates that if a fallback is encoutered, it should be
    appended to the current output, but with the output ptr at the normal
	position (so it is added after the normal output)
  - a function to retrieve the character. The latter is obviously the most
    clean interface (least hacky), but is less efficient, and likely duplicates
	some code.
  In both cases, we actually have to convert the bytes we find to a unicode
  character. To do this, we have to
  - figure out which starting state the target bytes use
  - save the current converter state.to
  - set the converter state.to to the required one for converting the target
  - convert the target to unicode
  - restore the converter state.to
  - return the found unicode state
  However, we can also simply provide a short list in each converter indicating
  which fallbacks there are. Then we can do a binary search on that and return
  that value. Those are the overrides only, because for the general ones we
  don't include anything.
- iso-2022-*, lmb, scsu, [bocu-1 PATENTED], iscii
- the aliases file is in ASCII, but the system on which we are running may not
  be! This means the aliases file should be converted to the current execution
  charset before use.

LOW PRIORITY
============
- perhaps an iconv like A to B converter with better semantics and better
  performance (through multiple conversions at a time) should be provided as
  well
- should TRANSCRIPT_ALLOW_PRIVATE_USE impact the from_unicode conversion as well?

RELEASE ENGINEERING
===================
- provide translations
- set the copyright years correctly
