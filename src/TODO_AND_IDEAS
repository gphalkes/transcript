- interface should have flags for
	- allowing fallbacks, including (and perhaps separately) fullwidth to
	  halfwidth fallbacks
- perhaps an iconv like A to B convertor with better semantics and better
  performance (through multiple conversions at a time) should be provided as
  well

- creating the list of names may be a bit heavy. Checking the availability
  could also be done when requested rather than at load time

- iso-2022-*, lmb, scsu, [bocu-1 PATENTED]

- proper testing of all the convertors!!! This means both correct and
  incorrect input!

- map FFFD to subchar!
- private use handling in the unicode convertor! Should private use chars
  be allowed, and what interaction should be used wrt CHARCONV_ALLOW_PRIVATE_USE
- need formats which force endianess and use of BOM for UTF-16/32
- can we handle IBM PUA and apple PUA such that we somehow know where the
  private use stuff came from? If so, we can handle the whole
  CHARCONV_ALLOW_PRIVATE_USE differently
- we should modify convertors.txt to indicate the different variants
- convertors.txt sometimes heaps things that are not exactly the same.
  We should figure out if we can split those to do a proper difference.
  With the variant selection mechanism, this should not cause a large
  increase in size.

http://x0213.org/codetable/index.en.html
official standard (in japanese) http://www.jisc.go.jp/app/pager?id=72545